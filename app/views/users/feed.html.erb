<h1><%= @the_user.username %></h1>

<dl>
  <dt>Private</dt>
  <dd><%= @the_user.private %></dd>

  <!-- bring data from accepted followers requests (recipient) -->
  <% accepted_followers = FollowRequest.where({ :recipient_id => @the_user.id, :status => "accepted" }) %>

  <dt>Followers</dt>
  <dd><%= accepted_followers.count %></dd>

  <!-- bring data from accepted following requests (sender) -->                       
  <% following_accepted = FollowRequest.where({ :sender_id => @the_user.id, :status => "accepted" }) %>

  <dt>Following</dt>
  <dd><%= following_accepted.count %></dd>
</dl>  

<nav>
  <ul>
    <li>
      <a href="/users/<%= @the_user.username %>">Profile</a>
    </li>
    <li>
      <a href="/users/<%= @the_user.username %>/liked_photos">Liked photos</a>
    </li>
    <li>
      <a href="/users/<%= @the_user.username %>/feed">Feed</a>
    </li>
    <li>
      <a href="/users/<%= @the_user.username %>/discover">Discover</a>
    </li>
  </ul>
</nav>

<!-- initialize an empty photo array -->
<% the_photos_count = [] %>
<!-- bring likes for this photo -->  
<% following = FollowRequest.where({ :sender_id => @the_user.id, :status => "accepted" }) %>  
<!-- iterate through liked photos -->  
<% following.each do |a_followed_request| %>

<!-- bring photos to user pages and render -->
<!-- loop over the_photos and display -->
<% the_photos = Photo.where({ :owner_id => a_followed_request.recipient_id }) %>
<% the_photos_count.push(the_photos.length)%>
<% the_photos.each do |a_photo| %>
<%# the_photos.push(Photo.where({ :owner_id => a_followed_request.recipient_id }).at(0)) %>
<%# the_photos.push(Photo.where({ :owner_id => a_followed_request.recipient_id }).map_relation_to_array(:photo_id)) %>
  <% end %>
<% end %>

<h2>Feed (<%= the_photos_count.sum %>)</h2>

<table border="1">

  <tr>
    <th>
      Image
    </th>

    <th>
      Owner
    </th>

    <th>
      Caption
    </th>

    <th>
      Posted
    </th>

    <th>
      Likes
    </th>

    <th></th>
  </tr>

<!-- iterate over all photos, using .compact will get rid of nil results -->
<%# the_photos.compact.each do |a_photo| %>
<% following.each do |a_followed_request| %>
<% the_photos = Photo.where({ :owner_id => a_followed_request.recipient_id }) %>
<% the_photos.each do |a_photo| %>
<%# one_photo = a_photo.first %>

  <tr>

    <td>
       <img src="<%= a_photo.image %>" class="img-responsive">
    </td>

    <td>
      <!-- bring username for owner -->
      <% u = User.where({ :id => a_photo.owner_id }).at(0) %>

      <%= u.username %>
    </td>

    <td>
      <%= a_photo.caption %>
    </td>

    <td>
      <%= time_ago_in_words(a_photo.created_at) %> ago
    </td>

    <td>
      <%= a_photo.likes_count %>
    </td>

    <td>
      <a href="/photos/<%= a_photo.id %>">Show details</a>
    </td>

    <% end %>
  <% end %>
  </tr>

</table>

  </body>
</html>
